{"ast":null,"code":"var _jsxFileName = \"/Users/ok.cool/Desktop/git-gruppuppgift/src/contexts/DataContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\nexport default function DataProvider(props) {\n  _s();\n\n  const [dataInput, setDataInput] = useState(\"\");\n\n  const handleClick = value => {\n    if (/\\d/.test(value)) {\n      setDataInput(dataInput + value);\n    } else if (value === \"clear\") {\n      setDataInput(\"\");\n    } else if (value === \"=\") {\n      console.log(\"Calculating...\");\n      calculate(dataInput);\n    } else {\n      setDataInput(dataInput + ` ${value} `);\n    }\n  };\n\n  const calculate = calculation => {\n    console.log(calculation);\n  };\n\n  const values = {\n    handleClick,\n    dataInput\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: values,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DataProvider, \"iM+DyHXiGwemXLQjgqLTsuDexrI=\");\n\n_c = DataProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["/Users/ok.cool/Desktop/git-gruppuppgift/src/contexts/DataContext.js"],"names":["createContext","useState","DataContext","DataProvider","props","dataInput","setDataInput","handleClick","value","test","console","log","calculate","calculation","values","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAjC;AAEP,eAAe,SAASG,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACxC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMM,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAI,KAAKC,IAAL,CAAUD,KAAV,CAAJ,EAAsB;AAClBF,MAAAA,YAAY,CAACD,SAAS,GAAGG,KAAb,CAAZ;AACH,KAFD,MAEO,IAAIA,KAAK,KAAK,OAAd,EAAuB;AAC1BF,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,KAFM,MAEA,IAAIE,KAAK,KAAK,GAAd,EAAmB;AACtBE,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAC,MAAAA,SAAS,CAACP,SAAD,CAAT;AACH,KAHM,MAGA;AACHC,MAAAA,YAAY,CAACD,SAAS,GAAI,IAAGG,KAAM,GAAvB,CAAZ;AACH;AACJ,GAXD;;AAaA,QAAMI,SAAS,GAAIC,WAAD,IAAiB;AAC/BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,WAAZ;AACH,GAFD;;AAIA,QAAMC,MAAM,GAAG;AACXP,IAAAA,WADW;AAEXF,IAAAA;AAFW,GAAf;AAKA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAES,MAA7B;AAAA,cAAsCV,KAAK,CAACW;AAA5C;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GA5BuBZ,Y;;KAAAA,Y","sourcesContent":["import { createContext, useState } from \"react\";\n\nexport const DataContext = createContext();\n\nexport default function DataProvider(props) {\n    const [dataInput, setDataInput] = useState(\"\");\n    \n    const handleClick = (value) => {\n        if (/\\d/.test(value)) {\n            setDataInput(dataInput + value);\n        } else if (value === \"clear\") {\n            setDataInput(\"\");\n        } else if (value === \"=\") {\n            console.log(\"Calculating...\");\n            calculate(dataInput);\n        } else {\n            setDataInput(dataInput + ` ${value} `);\n        }\n    };\n\n    const calculate = (calculation) => {\n        console.log(calculation);\n    }\n\n    const values = {\n        handleClick,\n        dataInput\n    };\n\n    return (\n        <DataContext.Provider value={values}>{props.children}</DataContext.Provider>\n    );\n}"]},"metadata":{},"sourceType":"module"}